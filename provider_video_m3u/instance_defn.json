{
    "streams":{
        "id": null,
        "icon": "cast",
        "label": "Stream Providers",
        "description": "Streaming Services",
        "sections":{
            "m3u":{
                "label": "M3U",
                "sort": "M3U2",
                "icon": "cast_connected",
                "description": "Settings for M3U Instances",
                "settings":{
                    "enabled":{
                        "label": "Enabled",
                        "type": "boolean",
                        "default": false,
                        "level": 0,
                        "help": "Default: False. Will disable this instance only"
                    },
                    "label":{
                        "label": "Label",
                        "type": "string",
                        "default": null,
                        "level": 0,
                        "onChange": "lib.config.config_callbacks.update_instance_label",
                        "help": "OnChange: The scheduler instance tasks are removed.  Please restart app following a change."
                    },
                    "channel-m3u_file":{
                        "label": "M3U File",
                        "type": "string",
                        "default": null,
                        "level": 0,
                        "help": "Use http:// https:// or (Linux) file:/// (Windows) file:///C:/ Be careful when using spaces in the path"
                    },
                    "channel-m3u_file_type":{
                        "label": "M3U File Type",
                        "type": "list",
                        "default": "autodetect",
                        "values": ["autodetect", "gzip", "zip", "m3u"],
                        "level": 1,
                        "help": "Default: autodetect. When the extension of the file is not provided from the url, set this to define the type of file"
                    },
                    "channel-m3u_filter":{
                        "label": "M3U Filter",
                        "type": "string",
                        "default": null,
                        "level": 2,
                        "help": "Default: None. Works with tvg* and group* args in m3u file; Value is regex \nFormat: name=value,name=value  \nEX:'tvg-chno=13.*, tvg-country=US' for all channels that start with 13 and country is US. No quotes are needed. All items are ANDed together."
                    },
                    "channel-update_timeout":{
                        "label": "Channel Update Timeout",
                        "type": "integer",
                        "default": 23,
                        "level": 3,
                        "help": "Default: 23. Channel list must be this old for update to occur when requested"
                    },
                    "channel-import_groups":{
                        "label": "Import Channel Groups",
                        "type": "boolean",
                        "default": false,
                        "level": 1,
                        "help": "Default: False. Imports groups from M3U into the group other column"
                    },
                    "channel-group_name":{
                        "label": "Group Name",
                        "type": "string",
                        "default": null,
                        "level": 1,
                        "help": "Default: None. By default, the m3u file contains the plugin as a group.  This allows an instance name to be added to the group list during the m3u request. Use simple single words, if possible. If empty, will not add group."
                    },
                    "channel-start_ch_num":{
                        "label": "Starting Ch Number",
                        "type": "integer",
                        "default": -1,
                        "level": 1,
                        "onChange": "lib.config.config_callbacks.update_channel_num",
                        "help": "Default: -1. -1 means not enabled. Overrides the channel number starting with the number provided and incrementing by one"
                    },
                    "player-stream_type":{
                        "label": "stream_type",
                        "type": "list",
                        "default": "internalproxy",
                        "values": ["m3u8redirect", "internalproxy", "streamlinkproxy", "ffmpegproxy"],
                        "level": 1,
                        "help": "Default: internalproxy. M3U8 send m3u8 file directly to client.  ffmpeg uses ffmpeg for m3u8 urls. streamlink uses the python module streamlink. internal uses internally coded modules."
                    },
                    "player-stream_quality":{
                        "label": "Maximum Stream Quality",
                        "type": "integer",
                        "default": 999999999,
                        "level": 3,
                        "help": "Default: 999999999. Used with all stream types but m3u8redirect. Maximum bps bandwidth requested for a stream. If a lower bandwidth is available, it is used.  default (999999999) means select the best quality."
                    },
                    "player-play_all_segments":{
                        "label": "Play All (VOD)",
                        "type": "boolean",
                        "default": false,
                        "level": 3,
                        "help": "Default: False. Plays all starting segments and ignores Non-VOD Segments to Start setting. Helpful when the VOD is not set in the provider stream."
                    },
                    "player-segments_to_play":{
                        "label": "Non-VOD Segments to Start",
                        "type": "integer",
                        "default": 2,
                        "level": 2,
                        "help": "Default: 2. When starting, will play the last xxx segments. '1' means no buffering. Each increase means about 6 seconds of buffering. If the VOD flag is set in the stream, then setting is ignored."
                    },
                    "player-decode_url":{
                        "label": "Decode M3U8 URL",
                        "type": "boolean",
                        "default": false,
                        "level": 3,
                        "help": "Default: False. Sometimes the provider M3U8 URL must be decoded before the HTTP request can be made.  Most of the time, it does not need to be decoded."
                    },
                    "player-enable_url_filter":{
                        "label": "URL Filtering",
                        "type": "boolean",
                        "default": false,
                        "level": 3,
                        "help": "Default: False. Only works with internalproxy. Filters out streams from URL addresses based on regular expression"
                    },
                    "player-url_filter":{
                        "label": "URL Filter",
                        "type": "string",
                        "default": null,
                        "level": 3,
                        "help": "Default: None. Only used with stream_type=internalproxy"
                    },
                    "player-enable_full_duplicate_checking":{
                        "label": "URL Full Duplicate Filtering",
                        "type": "boolean",
                        "default": true,
                        "level": 3,
                        "help": "Default: True. Only works with internalproxy. If disabled will use the url without the query_string to determine if a stream packet is duplicate. Set to false when the url contains dynamic authentication data that changes."
                    },
                    "player-enable_pathonly_checking":{
                        "label": "URL Path Only Filtering",
                        "type": "boolean",
                        "default": false,
                        "level": 3,
                        "help": "Default: False. Only works with internalproxy. If enabled, will use only the path part of the url and not include the host, port or query string to determine if a stream packet is duplicate. Set to true when the hostname changes constantly on m3u8 gets."
                    },
                    "player-enable_pts_filter":{
                        "label": "PTS Filtering",
                        "type": "boolean",
                        "default": false,
                        "level": 3,
                        "help": "Default: False. Works with internalproxy and ffmpegproxy. Filters out corrupted PTS packets.  Requires ffprobe.exe"
                    },
                    "player-pts_minimum":{
                        "label": "pts_minimum",
                        "type": "integer",
                        "default": 10000000,
                        "level": 3,
                        "help": "Default 10,000,000 or 108 seconds after midnight. Filters out non-standard streams that whose PTS starts at midnight."
                    },
                    "player-pts_max_delta":{
                        "label": "pts_max_delta",
                        "type": "integer",
                        "default": 3000000,
                        "level": 3,
                        "help": "Default 3,000,000 or 32 seconds. when playing contiguous blocks of video, filters out any blocks that do not have a continuous PTS counter."
                    },
                    "player-enable_pts_resync":{
                        "label": "PTS/DTS Resync",
                        "type": "boolean",
                        "default": true,
                        "level": 2,
                        "help": "Default: True. Works with internalproxy and ffmpegproxy. Corrects timing issues with the video and audio streams and makes them contiguous"
                    },
                    "player-pts_resync_type":{
                        "label": "PTS/DTS Resync Type",
                        "type": "list",
                        "default": "ffmpeg",
                        "values": ["ffmpeg", "internal"],
                        "level": 2,
                        "help": "Default: ffmpeg. Uses either ffmpeg genpts or internal resequencing"
                    },
                    "epg-enabled":{
                        "label": "XMLTV Enabled",
                        "type": "boolean",
                        "default": true,
                        "level": 1,
                        "help": "Default: True. If disabled, will not ingest or populate the XMLTV output with this instance"
                    },
                    "epg-xmltv_file":{
                        "label": "XMLTV File",
                        "type": "string",
                        "default": null,
                        "level": 0,
                        "help": "Use http:// https:// or (Linux) file:/// (Windows) file:///C:/ Be careful when using spaces in the path"
                    },
                    "epg-xmltv_file_type":{
                        "label": "XMLTV File Type",
                        "type": "list",
                        "default": "autodetect",
                        "values": ["autodetect", "gzip", "zip", "xml"],
                        "level": 1,
                        "help": "Default: autodetect. When the extension of the file is not provided from the url, set this to define the type of file"
                    },
                    "epg-prefix":{
                        "label": "EPG Channel Prefix",
                        "type": "string",
                        "default": null,
                        "level": 1,
                        "help": "Default: None. If a number will ADD to the display channel number; otherwise, will prepend to the channel number as a string"
                    },
                    "epg-suffix":{
                        "label": "EPG Channel Suffix",
                        "type": "string",
                        "default": null,
                        "level": 1,
                        "help": "Default: None. Will append to the channel number as a string"
                    },
                    "epg-episode_adjustment":{
                        "label": "Adjusts Episode number",
                        "type": "list",
                        "default": 0,
                        "values": [0, 1000, 2000, 3000, 4000, 5000],
                        "level": 1,
                        "help": "Default: 0. Used to record the same episode on two different channels at the same time.  EX: Record the same channel from antenna and M3U at the same time."
                    },
                    "epg-start_adjustment":{
                        "label": "Start Time Adjustment",
                        "type": "integer",
                        "default": 0,
                        "level": 2,
                        "help": "Default: 0. Used to start each program x seconds after the program is suppose to start."
                    },
                    "epg-end_adjustment":{
                        "label": "End Time Adjustment",
                        "type": "integer",
                        "default": 0,
                        "level": 2,
                        "help": "Default: 0. Used to start each program x seconds before the program is suppose to end."
                    },
                    "epg-min_refresh_rate":{
                        "label": "EPG Min Refresh Rate",
                        "type": "integer",
                        "default": 3600,
                        "level": 2,
                        "help": "Default=3600 seconds (1 hours). When a HTTP request for epg data is received, will refresh the data if older than this value."
                    }
                }
            }
        }
    }
}
